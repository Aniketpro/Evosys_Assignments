-- TRIGGERS
--CREATE [OR REPLACE] TRIGGER trigger_name
--{BEFORE | AFTER } triggering_event ON table_name
--[FOR EACH ROW]
--[FOLLOWS | PRECEDES another_trigger]
--[ENABLE / DISABLE ]
--[WHEN condition]
--DECLARE
--    declaration statements
--BEGIN
--    executable statements
--EXCEPTION
--    exception_handling statements
--END;

CREATE TABLE audits (
      audit_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      table_name       VARCHAR2(255),
      transaction_name VARCHAR2(10),
      by_user          VARCHAR2(30),
      transaction_date DATE
);

-- ==========================================
-- ROW LEVEL TRIGERRS
-- IF 'FOR EACH ROW' IS REMOVED 
-- IT WILL BECOME A STATEMENT LEVEL TRIGGER
CREATE OR REPLACE TRIGGER emp_audit_trg
    AFTER 
    UPDATE OR DELETE 
    ON emp
    FOR EACH ROW    
DECLARE
   l_transaction VARCHAR2(10);
BEGIN
   -- determine the transaction type
   l_transaction := CASE  
         WHEN UPDATING THEN 'UPDATE'
         WHEN DELETING THEN 'DELETE'
   END;

   -- insert a row into the audit table   
   INSERT INTO audits (table_name, transaction_name, by_user, transaction_date)
   VALUES('EMP', l_transaction, USER, SYSDATE);
END;
-- ================================
SELECT * FROM emp;
-- ================================
UPDATE 
    emp
SET 
    comm=0
WHERE
    comm=100;
-- ================================
SELECT * FROM audits;

-- DROP TRIGGER
DROP TRIGGER emp_audit_trg;